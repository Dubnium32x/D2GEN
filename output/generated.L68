00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/21/2025 5:20:20 PM

00001000                             1          ORG $1000
00001000  4EF9 00001112              2          JMP main
00001006                             3  sayHello:
00001006                             4          ; Function prologue
00001006  2F0E                       5          move.l A6, -(SP)
00001008  2C4F                       6          move.l SP, A6
0000100A  43F9 00001028              7          lea .str_0, A1
00001010  103C 0009                  8          move.b #9, D0
00001014  4E4E                       9          trap #14
00001016  43F9 00001028             10          lea .str_0, A1
0000101C  103C 0009                 11          move.b #9, D0
00001020  4E4E                      12          trap #14
00001022                            13          ; Function epilogue
00001022  2E4E                      14          move.l A6, SP
00001024  2C5F                      15          move.l (SP)+, A6
00001026  4E75                      16          rts
00001028                            17  
00001028                            18          ; String literals
00001028                            19  .str_0:
00001028= 48 65 6C 6C 6F 21 00      20          dc.b 'Hello!', 0
0000102F                            21  add:
0000102F                            22          ; Function prologue
00001030  2F0E                      23          move.l A6, -(SP)
00001032  2C4F                      24          move.l SP, A6
00001034  221F                      25          move.l (SP)+, D1
00001036  23C1 00001072             26          move.l D1, .var_b
0000103C  241F                      27          move.l (SP)+, D2
0000103E  23C2 0000106E             28          move.l D2, .var_a
00001044  2239 0000106E             29          move.l .var_a, D1
0000104A  2439 00001072             30          move.l .var_b, D2
00001050  2601                      31          move.l D1, D3
00001052  D682                      32          add.l D2, D3
00001054  7000                      33          move.l #0, D0 ; return
00001056  2239 0000106E             34          move.l .var_a, D1
0000105C  2439 00001072             35          move.l .var_b, D2
00001062  2601                      36          move.l D1, D3
00001064  D682                      37          add.l D2, D3
00001066  7000                      38          move.l #0, D0 ; return
00001068                            39          ; Function epilogue
00001068  2E4E                      40          move.l A6, SP
0000106A  2C5F                      41          move.l (SP)+, A6
0000106C  4E75                      42          rts
0000106E                            43  .var_a: ds.l 1
00001072                            44  .var_b: ds.l 1
00001076                            45  
00001076                            46          ; String literals
00001076                            47  .str_0:
00001076= 48 65 6C 6C 6F 21 00      48          dc.b 'Hello!', 0
0000107D                            49  checkEven:
0000107D                            50          ; Function prologue
0000107E  2F0E                      51          move.l A6, -(SP)
00001080  2C4F                      52          move.l SP, A6
00001082  281F                      53          move.l (SP)+, D4
00001084  23C4 000010FE             54          move.l D4, .var_num
0000108A  2239 000010FE             55          move.l .var_num, D1
00001090  7402                      56          move.l #2, D2
00001092  2601                      57          move.l D1, D3
00001094  86C2                      58          divu D2, D3
00001096  7800                      59          move.l #0, D4
00001098  B8BC 00000000             60          cmp.l #0, D4
0000109E  57C5                      61          seq D5
Line 62 ERROR: Invalid addressing mode
000010A0                            62          cmp.l #0, #0
000010A0  6700 0012                 63          beq .else_0
000010A4  43F9 00001102             64          lea .str_1, A1
000010AA  103C 0009                 65          move.b #9, D0
000010AE  4E4E                      66          trap #14
000010B0  6000 000E                 67          bra .endif_1
000010B4                            68  .else_0:
000010B4  43F9 0000110E             69          lea .str_2, A1
000010BA  103C 0009                 70          move.b #9, D0
000010BE  4E4E                      71          trap #14
000010C0                            72  .endif_1:
000010C0  2239 000010FE             73          move.l .var_num, D1
000010C6  7402                      74          move.l #2, D2
000010C8  2601                      75          move.l D1, D3
000010CA  86C2                      76          divu D2, D3
000010CC  7800                      77          move.l #0, D4
Line 78 ERROR: Undefined symbol
000010CE  0CB8 004DBD16 0000        78          cmp.l #D4, 0
000010D6  57C5                      79          seq D5
Line 80 ERROR: Invalid addressing mode
000010D8                            80          cmp.l #0, #0
000010D8  6700 0012                 81          beq .else_2
000010DC  43F9 00001102             82          lea .str_1, A1
000010E2  103C 0009                 83          move.b #9, D0
000010E6  4E4E                      84          trap #14
000010E8  6000 000E                 85          bra .endif_3
000010EC                            86  .else_2:
000010EC  43F9 0000110E             87          lea .str_2, A1
000010F2  103C 0009                 88          move.b #9, D0
000010F6  4E4E                      89          trap #14
000010F8                            90  .endif_3:
000010F8                            91          ; Function epilogue
000010F8  2E4E                      92          move.l A6, SP
000010FA  2C5F                      93          move.l (SP)+, A6
000010FC  4E75                      94          rts
000010FE                            95  .var_num: ds.l 1
00001102                            96  
00001102                            97          ; String literals
00001102                            98  .str_1:
00001102= 45 76 65 6E 00            99          dc.b 'Even', 0
00001107                           100  .str_0:
00001107= 48 65 6C 6C 6F 21 00     101          dc.b 'Hello!', 0
0000110E                           102  .str_2:
0000110E= 4F 64 64 00              103          dc.b 'Odd', 0
00001112                           104  main:
00001112                           105          ; Function prologue
00001112  2F0E                     106          move.l A6, -(SP)
00001114  2C4F                     107          move.l SP, A6
00001116  6100 FEEE                108          bsr sayHello
0000111A  DFFC 00000000            109          add.l #0, SP
00001120  2200                     110          move.l D0, D1
00001122  6100 FEE2                111          bsr sayHello
00001126  DFFC 00000000            112          add.l #0, SP
0000112C  2200                     113          move.l D0, D1
0000112E  7203                     114          move.l #3, D1
00001130  2F01                     115          move.l D1, -(SP)
00001132  7405                     116          move.l #5, D2
00001134  2F02                     117          move.l D2, -(SP)
00001136  6100 FEF7                118          bsr add
0000113A  508F                     119          add.l #8, SP
0000113C  2600                     120          move.l D0, D3
0000113E  23C3 000011A4            121          move.l D3, .var_result
00001144  7203                     122          move.l #3, D1
00001146  2F01                     123          move.l D1, -(SP)
00001148  7405                     124          move.l #5, D2
0000114A  2F02                     125          move.l D2, -(SP)
0000114C  6100 FEE1                126          bsr add
00001150  508F                     127          add.l #8, SP
00001152  2600                     128          move.l D0, D3
00001154  23C3 000011A4            129          move.l D3, .var_result
0000115A  2239 000011A4            130          move.l .var_result, D1
00001160  2201                     131          move.l D1, D1
00001162  103C 0001                132          move.b #1, D0
00001166  4E4E                     133          trap #14
00001168  2239 000011A4            134          move.l .var_result, D1
0000116E  2201                     135          move.l D1, D1
00001170  103C 0001                136          move.b #1, D0
00001174  4E4E                     137          trap #14
00001176  2239 000011A4            138          move.l .var_result, D1
0000117C  2F01                     139          move.l D1, -(SP)
0000117E  6100 FEFD                140          bsr checkEven
00001182  588F                     141          add.l #4, SP
00001184  2400                     142          move.l D0, D2
00001186  2239 000011A4            143          move.l .var_result, D1
0000118C  2F01                     144          move.l D1, -(SP)
0000118E  6100 FEED                145          bsr checkEven
00001192  588F                     146          add.l #4, SP
00001194  2400                     147          move.l D0, D2
00001196  7200                     148          move.l #0, D1
00001198  2001                     149          move.l D1, D0 ; return
0000119A  7200                     150          move.l #0, D1
0000119C  2001                     151          move.l D1, D0 ; return
0000119E                           152          ; Function epilogue
0000119E  2E4E                     153          move.l A6, SP
000011A0  2C5F                     154          move.l (SP)+, A6
000011A2  4E75                     155          rts
000011A4                           156  .var_result: ds.l 1
000011A8                           157  
000011A8                           158          ; String literals
000011A8                           159  .str_1:
000011A8= 45 76 65 6E 00           160          dc.b 'Even', 0
000011AD                           161  .str_0:
000011AD= 48 65 6C 6C 6F 21 00     162          dc.b 'Hello!', 0
000011B4                           163  .str_2:
000011B4= 4F 64 64 00              164          dc.b 'Odd', 0
Line 165 WARNING: Address expected
000011B8                           165          END

3 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD                 102F
ADD:STR_0           1076
ADD:VAR_A           106E
ADD:VAR_B           1072
CHECKEVEN           107D
CHECKEVEN:ELSE_0    10B4
CHECKEVEN:ELSE_2    10EC
CHECKEVEN:ENDIF_1   10C0
CHECKEVEN:ENDIF_3   10F8
CHECKEVEN:STR_0     1107
CHECKEVEN:STR_1     1102
CHECKEVEN:STR_2     110E
CHECKEVEN:VAR_NUM   10FE
MAIN                1112
MAIN:STR_0          11AD
MAIN:STR_1          11A8
MAIN:STR_2          11B4
MAIN:VAR_RESULT     11A4
SAYHELLO            1006
SAYHELLO:STR_0      1028

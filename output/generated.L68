00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/22/2025 2:05:07 PM

00001000                             1          ORG $1000
00001000  4EF9 00001006              2          JMP main
00001006                             3  main:
00001006                             4          ; Function prologue
00001006  2F0E                       5          move.l A6, -(SP)
00001008  2C4F                       6          move.l SP, A6
0000100A  7201                       7          move.l #1, D1
0000100C  23C1 00001172              8          move.l D1, arrNumbers_0
00001012  7402                       9          move.l #2, D2
00001014  23C2 00001176             10          move.l D2, arrNumbers_1
0000101A  7603                      11          move.l #3, D3
0000101C  23C3 0000117A             12          move.l D3, arrNumbers_2
00001022  7804                      13          move.l #4, D4
00001024  23C4 0000117E             14          move.l D4, arrNumbers_3
0000102A  7A05                      15          move.l #5, D5
0000102C  23C5 00001182             16          move.l D5, arrNumbers_4
00001032= 00000005                  17  arrNumbers_len:    dc.l 5
00001036  43F9 00001169             18          lea strAA, A1
0000103C  103C 0009                 19          move.b #9, D0
00001040  4E4E                      20          trap #14
00001042  2239 00001140             21          move.l arrNumbers, D1
00001048  2201                      22          move.l D1, D1
0000104A  103C 0001                 23          move.b #1, D0
0000104E  4E4E                      24          trap #14
00001050  43F9 00001169             25          lea strAA, A1
00001056  103C 0009                 26          move.b #9, D0
0000105A  4E4E                      27          trap #14
0000105C  2239 00001140             28          move.l arrNumbers, D1
00001062  2201                      29          move.l D1, D1
00001064  103C 0001                 30          move.b #1, D0
00001068  4E4E                      31          trap #14
0000106A  43F9 00001148             32          lea strAB, A1
00001070  103C 0009                 33          move.b #9, D0
00001074  4E4E                      34          trap #14
00001076  2239 00001140             35          move.l arrNumbers, D1
0000107C  2201                      36          move.l D1, D1
0000107E  103C 0001                 37          move.b #1, D0
00001082  4E4E                      38          trap #14
00001084  43F9 00001148             39          lea strAB, A1
0000108A  103C 0009                 40          move.b #9, D0
0000108E  4E4E                      41          trap #14
00001090  2239 00001140             42          move.l arrNumbers, D1
00001096  2201                      43          move.l D1, D1
00001098  103C 0001                 44          move.b #1, D0
0000109C  4E4E                      45          trap #14
0000109E  43F9 00001159             46          lea strAC, A1
000010A4  103C 0009                 47          move.b #9, D0
000010A8  4E4E                      48          trap #14
000010AA  43F9 00001159             49          lea strAC, A1
000010B0  103C 0009                 50          move.b #9, D0
000010B4  4E4E                      51          trap #14
000010B6  23FC 00000000 00001144    52          move.l #0, var_num
000010C0  23FC 00000000 00001144    53          move.l #0, var_num
000010CA  7200                      54          move.l #0, D1
000010CC  23C1 00001144             55          move.l D1, var_num
000010D2  7200                      56          move.l #0, D1
000010D4  23C1 00001144             57          move.l D1, var_num
000010DA                            58          ; Initialize foreach loop (num)
000010DA  7201                      59          move.l #1, D1          ; Start value
000010DC  7405                      60          move.l #5, D2          ; End value
000010DE  23C1 00001108             61          move.l D1, (var_num_counter) ; Store initial value
000010E4                            62  foreach_0:
000010E4                            63          ; Check loop condition
000010E4  B282                      64          cmp.l D2, D1
000010E6  6C00 0020                 65          bge end_foreach_1
000010EA  23C1 00001144             66          move.l D1, (var_num) ; Update num
000010F0                            67          ; === Loop body begin ===
000010F0  2239 00001144             68          move.l var_num, D1
000010F6  2201                      69          move.l D1, D1
000010F8  103C 0001                 70          move.b #1, D0
000010FC  4E4E                      71          trap #14
000010FE                            72          ; === Loop body end ===
000010FE                            73          ; Update loop counter
000010FE  5281                      74          addq.l #1, D1          ; num++
00001100  23C1 00001108             75          move.l D1, (var_num_counter) ; Store updated value
00001106  60DC                      76          bra foreach_0
00001108                            77  end_foreach_1:
00001108                            78          ; Foreach loop complete
00001108                            79          ; Clean up foreach loop variables
00001108                            80  var_num_counter:    ds.l 1 ; Clean up counter variable
0000110C                            81  var_char_buffer:    ds.l 1 ; Clean up char buffer
00001110                            82          ; Reset register counter if needed
00001110                            83          ; Initialize foreach loop (num)
00001110  7201                      84          move.l #1, D1          ; Start value
00001112  7405                      85          move.l #5, D2          ; End value
00001114  21C1 1108                 86          move.l D1, (var_num_counter) ; Store initial value
00001118                            87  foreach_2:
00001118                            88          ; Check loop condition
00001118  B282                      89          cmp.l D2, D1
0000111A  6C00 001E                 90          bge end_foreach_3
0000111E  23C1 00001144             91          move.l D1, (var_num) ; Update num
00001124                            92          ; === Loop body begin ===
00001124  2239 00001144             93          move.l var_num, D1
0000112A  2201                      94          move.l D1, D1
0000112C  103C 0001                 95          move.b #1, D0
00001130  4E4E                      96          trap #14
00001132                            97          ; === Loop body end ===
00001132                            98          ; Update loop counter
00001132  5281                      99          addq.l #1, D1          ; num++
00001134  21C1 1108                100          move.l D1, (var_num_counter) ; Store updated value
00001138  60DE                     101          bra foreach_2
0000113A                           102  end_foreach_3:
0000113A                           103          ; Foreach loop complete
0000113A                           104          ; Clean up foreach loop variables
0000113A                           105          ; Reset register counter if needed
0000113A                           106          ; Function epilogue
0000113A  2E4E                     107          move.l A6, SP
0000113C  2C5F                     108          move.l (SP)+, A6
0000113E  4E75                     109          rts
00001140                           110  arrNumbers: ds.l 1
00001144                           111  var_num: ds.l 1
00001148                           112          ; String literals for main
00001148                           113  
00001148                           114          ; String literals
00001148                           115  strAB:
00001148= 4D 6F 64 69 66 69 ...    116          dc.b 'Modified Array: ', 0
00001159                           117  strAC:
00001159= 41 72 72 61 79 20 ...    118          dc.b 'Array elements:', 0
00001169                           119  strAA:
00001169= 41 72 72 61 79 3A ...    120          dc.b 'Array: ', 0
00001171                           121          ; Array storage
00001172                           122  arrNumbers_0:    ds.l 1
00001176                           123  arrNumbers_1:    ds.l 1
0000117A                           124  arrNumbers_2:    ds.l 1
0000117E                           125  arrNumbers_3:    ds.l 1
00001182                           126  arrNumbers_4:    ds.l 1
00001186                           127  arrNumbers_5:    ds.l 1
0000118A                           128  arrNumbers_6:    ds.l 1
0000118E                           129  arrNumbers_7:    ds.l 1
00001192                           130  arrNumbers_8:    ds.l 1
00001196                           131  arrNumbers_9:    ds.l 1
Line 132 WARNING: Address expected
0000119A                           132          END

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ARRNUMBERS          1140
ARRNUMBERS_0        1172
ARRNUMBERS_1        1176
ARRNUMBERS_2        117A
ARRNUMBERS_3        117E
ARRNUMBERS_4        1182
ARRNUMBERS_5        1186
ARRNUMBERS_6        118A
ARRNUMBERS_7        118E
ARRNUMBERS_8        1192
ARRNUMBERS_9        1196
ARRNUMBERS_LEN      1032
END_FOREACH_1       1108
END_FOREACH_3       113A
FOREACH_0           10E4
FOREACH_2           1118
MAIN                1006
STRAA               1169
STRAB               1148
STRAC               1159
VAR_CHAR_BUFFER     110C
VAR_NUM             1144
VAR_NUM_COUNTER     1108

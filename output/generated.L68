00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/10/2025 10:21:26 PM

00000000                             1  ** GENERATED CODE USING DLANG AND D2GEN COMPILER **
00001000                             2          ORG $1000
00001000  4EB9 0000100C              3          jsr __global_init
00001006  4EF9 0000100E              4          jmp main
0000100C                             5  
0000100C                             6  ; ===== FUNCTION DEFINITIONS =====
0000100C                             7  __global_init:
0000100C  4E75                       8          rts
0000100E                             9  main:
0000100E                            10          ; Function prologue
0000100E  4E56 0000                 11          link A6, #0  ; Setup stack frame (saves A6 and sets up new frame in one instruction)
00001012  43F9 0000108E             12          lea strAA, A1  ; Load effective address
00001018  2F09                      13          move.l A1, -(SP)
0000101A  6100 0104                 14          bsr writeln
0000101E  588F                      15          add.l #4, SP
00001020  43F9 000010F0             16          lea p, A1  ; Load effective address
00001026  2229 0000                 17          move.l 0(A1), D1  ; Optimized field access with direct displacement
0000102A  45F9 000010F0             18          lea p, A2  ; Load effective address
00001030  242A 0000                 19          move.l 0(A2), D2  ; Optimized field access with direct displacement
00001034  2202                      20          move.l D2, D1
00001036  2F01                      21          move.l D1, -(SP)
00001038  588F                      22          add.l #4, SP
0000103A  2600                      23          move.l D0, D3
0000103C  2F03                      24          move.l D3, -(SP)
0000103E  47F9 000010D0             25          lea strAB, A3  ; Load effective address
00001044  2F0B                      26          move.l A3, -(SP)
00001046  6100 00D8                 27          bsr writeln
0000104A  508F                      28          add.l #8, SP
0000104C  43F9 000010F0             29          lea p, A1  ; Load effective address
00001052  2229 0004                 30          move.l 4(A1), D1  ; Optimized field access with direct displacement
00001056  45F9 000010F0             31          lea p, A2  ; Load effective address
0000105C  242A 0004                 32          move.l 4(A2), D2  ; Optimized field access with direct displacement
00001060  2202                      33          move.l D2, D1
00001062  2F01                      34          move.l D1, -(SP)
00001064  588F                      35          add.l #4, SP
00001066  2600                      36          move.l D0, D3
00001068  2F03                      37          move.l D3, -(SP)
0000106A  47F9 000010C6             38          lea strAC, A3  ; Load effective address
00001070  2F0B                      39          move.l A3, -(SP)
00001072  6100 00AC                 40          bsr writeln
00001076  508F                      41          add.l #8, SP
00001078  6100 0104                 42          bsr complex_expr
0000107C  43F9 000010DA             43          lea strAD, A1  ; Load effective address
00001082  2F09                      44          move.l A1, -(SP)
00001084  6100 009A                 45          bsr writeln
00001088  588F                      46          add.l #4, SP
0000108A                            47          ; Function epilogue
0000108A  4E5E                      48          unlk A6       ; Restore stack frame (restores A6 and SP in one instruction)
0000108C  4E75                      49          rts           ; Return from subroutine
0000108E                            50  
0000108E                            51  ; ===== DATA SECTION =====
0000108E                            52  ; String literals
0000108E                            53  strAA:
0000108E= 54 65 73 74 69 6E ...     54          dc.b 'Testing mixin functionality with parameters and structs', 0
000010C6                            55  strAC:
000010C6= 53 63 61 6C 65 64 ...     56          dc.b 'Scaled y:', 0
000010D0                            57  strAB:
000010D0= 53 63 61 6C 65 64 ...     58          dc.b 'Scaled x:', 0
000010DA                            59  strAD:
000010DA= 4D 69 78 69 6E 20 ...     60          dc.b 'Mixin test completed', 0
000010EF                            61  ; Scalar and struct variables
000010F0                            62  p:    ds.l 2
000010F8                            63  ; Array labels
000010F8                            64  ; Loop variables
000010F8                            65  
000010F8  FFFF FFFF                 66          SIMHALT
000010FC                            67  
000010FC                            68  ; ===== RUNTIME FUNCTIONS =====
000010FC                            69  print:
000010FC                            70          ; Function prologue
000010FC  4E56 0000                 71          link    A6, #0          ; Setup stack frame
00001100  48E7 FFFC                 72          movem.l D0-D7/A0-A5, -(SP) ; Save all registers
00001104                            73  
00001104                            74          ; Print the string part
00001104  226E 0008                 75          move.l  8(A6), A1       ; Get string address from first parameter
00001108  700D                      76          move.l  #13, D0         ; Task 13 - print string without newline
0000110A  4E4F                      77          trap    #15             ; Call OS
0000110C                            78  
0000110C                            79          ; Print the value (second parameter)
0000110C  222E 000C                 80          move.l  12(A6), D1      ; Get the value to print
00001110  7003                      81          move.l  #3, D0          ; Task 3 - display number in D1.L
00001112  4E4F                      82          trap    #15             ; Call OS
00001114                            83  
00001114                            84          ; Print a newline
00001114  700B                      85          move.l  #11, D0         ; Task 11 - print CR/LF
00001116  4E4F                      86          trap    #15             ; Call OS
00001118                            87  
00001118                            88          ; Function epilogue
00001118  4CDF 3FFF                 89          movem.l (SP)+, D0-D7/A0-A5 ; Restore all registers
0000111C  4E5E                      90          unlk    A6              ; Restore stack frame
0000111E  4E75                      91          rts                     ; Return from subroutine
00001120                            92  writeln:
00001120                            93          ; Function prologue
00001120  4E56 0000                 94          link    A6, #0          ; Setup stack frame
00001124  48E7 FFFC                 95          movem.l D0-D7/A0-A5, -(SP) ; Save all registers
00001128                            96  
00001128                            97          ; Get the string address from the parameter
00001128  226E 0008                 98          move.l  8(A6), A1       ; Get string address from parameter
0000112C  700D                      99          move.l  #13, D0         ; Task 13 - print string without newline
0000112E  4E4F                     100          trap    #15             ; Call OS
00001130                           101  
00001130                           102          ; Check if there's a second parameter
00001130  222E 000C                103          move.l  12(A6), D1      ; Get the second parameter (if any)
00001134  0C81 00000000            104          cmpi.l  #0, D1          ; Check if it's zero (no second parameter)
0000113A  6700 0034                105          beq     .no_second_param
0000113E                           106  
0000113E                           107          ; Print a separator
0000113E  43F9 0000117C            108          lea     separator, A1  ; Load effective address
00001144  700D                     109          move.l  #13, D0
00001146  4E4F                     110          trap    #15
00001148                           111  
00001148                           112          ; Print the second value
00001148  222E 000C                113          move.l  12(A6), D1
0000114C  7003                     114          move.l  #3, D0          ; Task 3 - display number in D1.L
0000114E  4E4F                     115          trap    #15
00001150                           116  
00001150                           117          ; Check for third parameter (for structs with multiple fields)
00001150  222E 0010                118          move.l  16(A6), D1
00001154  0C81 00000000            119          cmpi.l  #0, D1
0000115A  6700 0014                120          beq     .no_third_param
0000115E                           121  
0000115E                           122          ; Print another separator and the third value
0000115E  43F9 0000117C            123          lea     separator, A1  ; Load effective address
00001164  700D                     124          move.l  #13, D0
00001166  4E4F                     125          trap    #15
00001168                           126  
00001168                           127          ; Print the third value
00001168  222E 0010                128          move.l  16(A6), D1
0000116C  7003                     129          move.l  #3, D0
0000116E  4E4F                     130          trap    #15
00001170                           131  
00001170                           132  .no_third_param:
00001170                           133  .no_second_param:
00001170                           134          ; Print a newline
00001170  700B                     135          move.l  #11, D0         ; Task 11 - print CR/LF
00001172  4E4F                     136          trap    #15             ; Call OS
00001174                           137  
00001174                           138          ; Function epilogue
00001174  4CDF 3FFF                139          movem.l (SP)+, D0-D7/A0-A5 ; Restore all registers
00001178  4E5E                     140          unlk    A6              ; Restore stack frame
0000117A  4E75                     141          rts                     ; Return from subroutine
0000117C                           142  separator:
0000117C= 20 00                    143          dc.b ' ', 0
0000117E                           144  complex_expr:
0000117E                           145          ; Function prologue
0000117E  4E56 0000                146          link    A6, #0          ; Setup stack frame
00001182  48E7 FFFC                147          movem.l D0-D7/A0-A5, -(SP) ; Save all registers
00001186                           148  
00001186                           149          ; Print point struct contents
00001186  43F9 000011D0            150          lea     strPoint, A1    ; Load struct name
0000118C  700D                     151          move.l  #13, D0         ; Task 13 - print string without newline
0000118E  4E4F                     152          trap    #15             ; Call OS
00001190                           153  
00001190                           154          ; Print x value
00001190  700B                     155          move.l  #11, D0         ; Task 11 - print CR/LF
00001192  4E4F                     156          trap    #15             ; Call OS
00001194  43F9 000011E0            157          lea     strX, A1        ; Load 'x:' string
0000119A  700D                     158          move.l  #13, D0         ; Task 13 - print string without newline
0000119C  4E4F                     159          trap    #15             ; Call OS
0000119E  41F8 10F0                160          lea     p, A0           ; Load p struct address
000011A2  2228 0000                161          move.l  0(A0), D1       ; Get p.x value
000011A6  7003                     162          move.l  #3, D0          ; Task 3 - display number in D1.L
000011A8  4E4F                     163          trap    #15             ; Call OS
000011AA                           164  
000011AA                           165          ; Print y value
000011AA  700B                     166          move.l  #11, D0         ; Task 11 - print CR/LF
000011AC  4E4F                     167          trap    #15             ; Call OS
000011AE  43F9 000011E4            168          lea     strY, A1        ; Load 'y:' string
000011B4  700D                     169          move.l  #13, D0         ; Task 13 - print string without newline
000011B6  4E4F                     170          trap    #15             ; Call OS
000011B8  41F8 10F0                171          lea     p, A0           ; Load p struct address
000011BC  2228 0004                172          move.l  4(A0), D1       ; Get p.y value
000011C0  7003                     173          move.l  #3, D0          ; Task 3 - display number in D1.L
000011C2  4E4F                     174          trap    #15             ; Call OS
000011C4  700B                     175          move.l  #11, D0         ; Task 11 - print CR/LF
000011C6  4E4F                     176          trap    #15             ; Call OS
000011C8                           177  
000011C8                           178          ; Function epilogue
000011C8  4CDF 3FFF                179          movem.l (SP)+, D0-D7/A0-A5 ; Restore all registers
000011CC  4E5E                     180          unlk    A6              ; Restore stack frame
000011CE  4E75                     181          rts                     ; Return from subroutine
000011D0                           182  
000011D0                           183  strPoint:
000011D0= 50 6F 69 6E 74 20 ...    184          dc.b 'Point contents:', 0
000011E0                           185  strX:
000011E0= 78 3A 20 00              186          dc.b 'x: ', 0
000011E4                           187  strY:
000011E4= 79 3A 20 00              188          dc.b 'y: ', 0
Line 189 WARNING: Address expected
000011E8                           189          END

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
COMPLEX_EXPR        117E
MAIN                100E
P                   10F0
PRINT               10FC
SEPARATOR           117C
STRAA               108E
STRAB               10D0
STRAC               10C6
STRAD               10DA
STRPOINT            11D0
STRX                11E0
STRY                11E4
WRITELN             1120
WRITELN:NO_SECOND_PARAM  1170
WRITELN:NO_THIRD_PARAM  1170
__GLOBAL_INIT       100C

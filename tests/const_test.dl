// const_test.dl - Test file for constant variables implementation

// Basic constant declaration and initialization
const int MAX_SCORE = 100;
const int MIN_SCORE = 0;

// Constants with different types
const byte MAX_LEVEL = 99;
const bool IS_ENABLED = true;

// Constants with expressions
const int DOUBLE_MAX = MAX_SCORE * 2;
const int HALF_MAX = MAX_SCORE / 2;

// Test function that tries to modify a constant (should cause a runtime error)
void testConstModification() {
    // This should fail at runtime when the compiler detects an attempt to modify a constant
    MAX_SCORE = 200;  // This should generate a runtime error
}

// Test function that uses constants (should work fine)
void useConstants() {
    int score = MAX_SCORE;
    bool enabled = IS_ENABLED;
    
    // Print the constants and values
    print("MAX_SCORE: ", MAX_SCORE);
    print("MIN_SCORE: ", MIN_SCORE);
    print("MAX_LEVEL: ", MAX_LEVEL);
    print("IS_ENABLED: ", IS_ENABLED);
    print("DOUBLE_MAX: ", DOUBLE_MAX);
    print("HALF_MAX: ", HALF_MAX);
    
    // Use constants in expressions
    int range = MAX_SCORE - MIN_SCORE;
    print("Score range: ", range);
}

// Function that declares local constants
void localConstants() {
    const int LOCAL_MAX = 50;
    const bool LOCAL_FLAG = false;
    
    // Print local constants
    print("LOCAL_MAX: ", LOCAL_MAX);
    print("LOCAL_FLAG: ", LOCAL_FLAG);
    
    // Try to modify a local constant (should cause a runtime error)
    // LOCAL_MAX = 75;  // Uncomment to test
}

// Visibility modifiers with constants
public const int PUBLIC_CONST = 42;
private const int PRIVATE_CONST = 84;

// Main function
void main() {
    print("Testing constant variables");
    
    // Call function that uses constants
    useConstants();
    
    // Test local constants
    localConstants();
    
    // Test attempt to modify a constant (uncomment to test runtime error)
    // testConstModification();
    
    print("Constant test completed");
}
